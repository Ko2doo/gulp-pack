{"version":3,"sources":["libs.js","main.js"],"names":["window","document","version","options","html5","reSkip","saveClones","supportsHtml5Styles","expando","expanID","expandoData","supportsUnknownElements","a","createElement","innerHTML","childNodes","length","frag","createDocumentFragment","cloneNode","e","addStyleSheet","ownerDocument","cssText","p","parent","getElementsByTagName","documentElement","insertBefore","lastChild","firstChild","getElements","elements","split","addElements","newElements","join","shivDocument","getExpandoData","data","nodeName","node","cache","test","createElem","canHaveChildren","tagUrn","appendChild","clone","i","elems","l","shivMethods","createFrag","Function","replace","shivCSS","hasCSS","type","module","exports","hello","subject","console","log","alert","hello2"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n */\n(function (window, document) {\n  /*jshint evil:true */\n  /** version */\n  var version = \"3.7.3\";\n\n  /** Preset options */\n  var options = window.html5 || {};\n\n  /** Used to skip problem elements */\n  var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n  /** Not all elements can be cloned in IE **/\n  var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n  /** Detect whether the browser supports default html5 styles */\n  var supportsHtml5Styles;\n\n  /** Name of the expando, to work with multiple documents or to re-shiv one document */\n  var expando = \"_html5shiv\";\n\n  /** The id for the the documents expando */\n  var expanID = 0;\n\n  /** Cached data for each document */\n  var expandoData = {};\n\n  /** Detect whether the browser supports unknown elements */\n  var supportsUnknownElements;\n\n  (function () {\n    try {\n      var a = document.createElement(\"a\");\n      a.innerHTML = \"<xyz></xyz>\";\n      //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n      supportsHtml5Styles = \"hidden\" in a;\n\n      supportsUnknownElements =\n        a.childNodes.length == 1 ||\n        (function () {\n          // assign a false positive if unable to shiv\n          document.createElement(\"a\");\n          var frag = document.createDocumentFragment();\n          return (\n            typeof frag.cloneNode == \"undefined\" ||\n            typeof frag.createDocumentFragment == \"undefined\" ||\n            typeof frag.createElement == \"undefined\"\n          );\n        })();\n    } catch (e) {\n      // assign a false positive if detection fails => unable to shiv\n      supportsHtml5Styles = true;\n      supportsUnknownElements = true;\n    }\n  })();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a style sheet with the given CSS text and adds it to the document.\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @param {String} cssText The CSS text.\n   * @returns {StyleSheet} The style element.\n   */\n  function addStyleSheet(ownerDocument, cssText) {\n    var p = ownerDocument.createElement(\"p\"),\n      parent = ownerDocument.getElementsByTagName(\"head\")[0] || ownerDocument.documentElement;\n\n    p.innerHTML = \"x<style>\" + cssText + \"</style>\";\n    return parent.insertBefore(p.lastChild, parent.firstChild);\n  }\n\n  /**\n   * Returns the value of `html5.elements` as an array.\n   * @private\n   * @returns {Array} An array of shived element node names.\n   */\n  function getElements() {\n    var elements = html5.elements;\n    return typeof elements == \"string\" ? elements.split(\" \") : elements;\n  }\n\n  /**\n   * Extends the built-in list of html5 elements\n   * @memberOf html5\n   * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n   * @param {Document} ownerDocument The context document.\n   */\n  function addElements(newElements, ownerDocument) {\n    var elements = html5.elements;\n    if (typeof elements != \"string\") {\n      elements = elements.join(\" \");\n    }\n    if (typeof newElements != \"string\") {\n      newElements = newElements.join(\" \");\n    }\n    html5.elements = elements + \" \" + newElements;\n    shivDocument(ownerDocument);\n  }\n\n  /**\n   * Returns the data associated to the given document\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @returns {Object} An object of data.\n   */\n  function getExpandoData(ownerDocument) {\n    var data = expandoData[ownerDocument[expando]];\n    if (!data) {\n      data = {};\n      expanID++;\n      ownerDocument[expando] = expanID;\n      expandoData[expanID] = data;\n    }\n    return data;\n  }\n\n  /**\n   * returns a shived element for the given nodeName and document\n   * @memberOf html5\n   * @param {String} nodeName name of the element\n   * @param {Document|DocumentFragment} ownerDocument The context document.\n   * @returns {Object} The shived element.\n   */\n  function createElement(nodeName, ownerDocument, data) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    if (supportsUnknownElements) {\n      return ownerDocument.createElement(nodeName);\n    }\n    if (!data) {\n      data = getExpandoData(ownerDocument);\n    }\n    var node;\n\n    if (data.cache[nodeName]) {\n      node = data.cache[nodeName].cloneNode();\n    } else if (saveClones.test(nodeName)) {\n      node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n    } else {\n      node = data.createElem(nodeName);\n    }\n\n    // Avoid adding some elements to fragments in IE < 9 because\n    // * Attributes like `name` or `type` cannot be set/changed once an element\n    //   is inserted into a document/fragment\n    // * Link elements with `src` attributes that are inaccessible, as with\n    //   a 403 response, will cause the tab/window to crash\n    // * Script elements appended to fragments will execute when their `src`\n    //   or `text` property is set\n    return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn\n      ? data.frag.appendChild(node)\n      : node;\n  }\n\n  /**\n   * returns a shived DocumentFragment for the given document\n   * @memberOf html5\n   * @param {Document} ownerDocument The context document.\n   * @returns {Object} The shived DocumentFragment.\n   */\n  function createDocumentFragment(ownerDocument, data) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    if (supportsUnknownElements) {\n      return ownerDocument.createDocumentFragment();\n    }\n    data = data || getExpandoData(ownerDocument);\n    var clone = data.frag.cloneNode(),\n      i = 0,\n      elems = getElements(),\n      l = elems.length;\n    for (; i < l; i++) {\n      clone.createElement(elems[i]);\n    }\n    return clone;\n  }\n\n  /**\n   * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n   * @private\n   * @param {Document|DocumentFragment} ownerDocument The document.\n   * @param {Object} data of the document.\n   */\n  function shivMethods(ownerDocument, data) {\n    if (!data.cache) {\n      data.cache = {};\n      data.createElem = ownerDocument.createElement;\n      data.createFrag = ownerDocument.createDocumentFragment;\n      data.frag = data.createFrag();\n    }\n\n    ownerDocument.createElement = function (nodeName) {\n      //abort shiv\n      if (!html5.shivMethods) {\n        return data.createElem(nodeName);\n      }\n      return createElement(nodeName, ownerDocument, data);\n    };\n\n    ownerDocument.createDocumentFragment = Function(\n      \"h,f\",\n      \"return function(){\" +\n        \"var n=f.cloneNode(),c=n.createElement;\" +\n        \"h.shivMethods&&(\" +\n        // unroll the `createElement` calls\n        getElements()\n          .join()\n          .replace(/[\\w\\-:]+/g, function (nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n        \");return n}\"\n    )(html5, data.frag);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Shivs the given document.\n   * @memberOf html5\n   * @param {Document} ownerDocument The document to shiv.\n   * @returns {Document} The shived document.\n   */\n  function shivDocument(ownerDocument) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    var data = getExpandoData(ownerDocument);\n\n    if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n      data.hasCSS = !!addStyleSheet(\n        ownerDocument,\n        // corrects block display not defined in IE6/7/8/9\n        \"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}\" +\n          // adds styling not present in IE6/7/8/9\n          \"mark{background:#FF0;color:#000}\" +\n          // hides non-rendered elements\n          \"template{display:none}\"\n      );\n    }\n    if (!supportsUnknownElements) {\n      shivMethods(ownerDocument, data);\n    }\n    return ownerDocument;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The `html5` object is exposed so that more elements can be shived and\n   * existing shiving can be detected on iframes.\n   * @type Object\n   * @example\n   *\n   * // options can be changed before the script is included\n   * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n   */\n  var html5 = {\n    /**\n     * An array or space separated string of node names of the elements to shiv.\n     * @memberOf html5\n     * @type Array|String\n     */\n    elements:\n      options.elements ||\n      \"abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video\",\n\n    /**\n     * current version of html5shiv\n     */\n    version: version,\n\n    /**\n     * A flag to indicate that the HTML5 style sheet should be inserted.\n     * @memberOf html5\n     * @type Boolean\n     */\n    shivCSS: options.shivCSS !== false,\n\n    /**\n     * Is equal to true if a browser supports creating unknown/HTML5 elements\n     * @memberOf html5\n     * @type boolean\n     */\n    supportsUnknownElements: supportsUnknownElements,\n\n    /**\n     * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n     * methods should be overwritten.\n     * @memberOf html5\n     * @type Boolean\n     */\n    shivMethods: options.shivMethods !== false,\n\n    /**\n     * A string to describe the type of `html5` object (\"default\" or \"default print\").\n     * @memberOf html5\n     * @type String\n     */\n    type: \"default\",\n\n    // shivs the document according to the specified `html5` object options\n    shivDocument: shivDocument,\n\n    //creates a shived element\n    createElement: createElement,\n\n    //creates a shived documentFragment\n    createDocumentFragment: createDocumentFragment,\n\n    //extends list of elements\n    addElements: addElements\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose html5\n  window.html5 = html5;\n\n  // shiv the document\n  shivDocument(document);\n\n  if (typeof module == \"object\" && module.exports) {\n    module.exports = html5;\n  }\n})(typeof window !== \"undefined\" ? window : this, document);\n/**\n * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n */\n(function (window, document) {\n  /*jshint evil:true */\n  /** version */\n  var version = \"3.7.3\";\n\n  /** Preset options */\n  var options = window.html5 || {};\n\n  /** Used to skip problem elements */\n  var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n  /** Not all elements can be cloned in IE **/\n  var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n  /** Detect whether the browser supports default html5 styles */\n  var supportsHtml5Styles;\n\n  /** Name of the expando, to work with multiple documents or to re-shiv one document */\n  var expando = \"_html5shiv\";\n\n  /** The id for the the documents expando */\n  var expanID = 0;\n\n  /** Cached data for each document */\n  var expandoData = {};\n\n  /** Detect whether the browser supports unknown elements */\n  var supportsUnknownElements;\n\n  (function () {\n    try {\n      var a = document.createElement(\"a\");\n      a.innerHTML = \"<xyz></xyz>\";\n      //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n      supportsHtml5Styles = \"hidden\" in a;\n\n      supportsUnknownElements =\n        a.childNodes.length == 1 ||\n        (function () {\n          // assign a false positive if unable to shiv\n          document.createElement(\"a\");\n          var frag = document.createDocumentFragment();\n          return (\n            typeof frag.cloneNode == \"undefined\" ||\n            typeof frag.createDocumentFragment == \"undefined\" ||\n            typeof frag.createElement == \"undefined\"\n          );\n        })();\n    } catch (e) {\n      // assign a false positive if detection fails => unable to shiv\n      supportsHtml5Styles = true;\n      supportsUnknownElements = true;\n    }\n  })();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a style sheet with the given CSS text and adds it to the document.\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @param {String} cssText The CSS text.\n   * @returns {StyleSheet} The style element.\n   */\n  function addStyleSheet(ownerDocument, cssText) {\n    var p = ownerDocument.createElement(\"p\"),\n      parent = ownerDocument.getElementsByTagName(\"head\")[0] || ownerDocument.documentElement;\n\n    p.innerHTML = \"x<style>\" + cssText + \"</style>\";\n    return parent.insertBefore(p.lastChild, parent.firstChild);\n  }\n\n  /**\n   * Returns the value of `html5.elements` as an array.\n   * @private\n   * @returns {Array} An array of shived element node names.\n   */\n  function getElements() {\n    var elements = html5.elements;\n    return typeof elements == \"string\" ? elements.split(\" \") : elements;\n  }\n\n  /**\n   * Extends the built-in list of html5 elements\n   * @memberOf html5\n   * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n   * @param {Document} ownerDocument The context document.\n   */\n  function addElements(newElements, ownerDocument) {\n    var elements = html5.elements;\n    if (typeof elements != \"string\") {\n      elements = elements.join(\" \");\n    }\n    if (typeof newElements != \"string\") {\n      newElements = newElements.join(\" \");\n    }\n    html5.elements = elements + \" \" + newElements;\n    shivDocument(ownerDocument);\n  }\n\n  /**\n   * Returns the data associated to the given document\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @returns {Object} An object of data.\n   */\n  function getExpandoData(ownerDocument) {\n    var data = expandoData[ownerDocument[expando]];\n    if (!data) {\n      data = {};\n      expanID++;\n      ownerDocument[expando] = expanID;\n      expandoData[expanID] = data;\n    }\n    return data;\n  }\n\n  /**\n   * returns a shived element for the given nodeName and document\n   * @memberOf html5\n   * @param {String} nodeName name of the element\n   * @param {Document|DocumentFragment} ownerDocument The context document.\n   * @returns {Object} The shived element.\n   */\n  function createElement(nodeName, ownerDocument, data) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    if (supportsUnknownElements) {\n      return ownerDocument.createElement(nodeName);\n    }\n    if (!data) {\n      data = getExpandoData(ownerDocument);\n    }\n    var node;\n\n    if (data.cache[nodeName]) {\n      node = data.cache[nodeName].cloneNode();\n    } else if (saveClones.test(nodeName)) {\n      node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n    } else {\n      node = data.createElem(nodeName);\n    }\n\n    // Avoid adding some elements to fragments in IE < 9 because\n    // * Attributes like `name` or `type` cannot be set/changed once an element\n    //   is inserted into a document/fragment\n    // * Link elements with `src` attributes that are inaccessible, as with\n    //   a 403 response, will cause the tab/window to crash\n    // * Script elements appended to fragments will execute when their `src`\n    //   or `text` property is set\n    return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn\n      ? data.frag.appendChild(node)\n      : node;\n  }\n\n  /**\n   * returns a shived DocumentFragment for the given document\n   * @memberOf html5\n   * @param {Document} ownerDocument The context document.\n   * @returns {Object} The shived DocumentFragment.\n   */\n  function createDocumentFragment(ownerDocument, data) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    if (supportsUnknownElements) {\n      return ownerDocument.createDocumentFragment();\n    }\n    data = data || getExpandoData(ownerDocument);\n    var clone = data.frag.cloneNode(),\n      i = 0,\n      elems = getElements(),\n      l = elems.length;\n    for (; i < l; i++) {\n      clone.createElement(elems[i]);\n    }\n    return clone;\n  }\n\n  /**\n   * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n   * @private\n   * @param {Document|DocumentFragment} ownerDocument The document.\n   * @param {Object} data of the document.\n   */\n  function shivMethods(ownerDocument, data) {\n    if (!data.cache) {\n      data.cache = {};\n      data.createElem = ownerDocument.createElement;\n      data.createFrag = ownerDocument.createDocumentFragment;\n      data.frag = data.createFrag();\n    }\n\n    ownerDocument.createElement = function (nodeName) {\n      //abort shiv\n      if (!html5.shivMethods) {\n        return data.createElem(nodeName);\n      }\n      return createElement(nodeName, ownerDocument, data);\n    };\n\n    ownerDocument.createDocumentFragment = Function(\n      \"h,f\",\n      \"return function(){\" +\n        \"var n=f.cloneNode(),c=n.createElement;\" +\n        \"h.shivMethods&&(\" +\n        // unroll the `createElement` calls\n        getElements()\n          .join()\n          .replace(/[\\w\\-:]+/g, function (nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n        \");return n}\"\n    )(html5, data.frag);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Shivs the given document.\n   * @memberOf html5\n   * @param {Document} ownerDocument The document to shiv.\n   * @returns {Document} The shived document.\n   */\n  function shivDocument(ownerDocument) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    var data = getExpandoData(ownerDocument);\n\n    if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n      data.hasCSS = !!addStyleSheet(\n        ownerDocument,\n        // corrects block display not defined in IE6/7/8/9\n        \"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}\" +\n          // adds styling not present in IE6/7/8/9\n          \"mark{background:#FF0;color:#000}\" +\n          // hides non-rendered elements\n          \"template{display:none}\"\n      );\n    }\n    if (!supportsUnknownElements) {\n      shivMethods(ownerDocument, data);\n    }\n    return ownerDocument;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The `html5` object is exposed so that more elements can be shived and\n   * existing shiving can be detected on iframes.\n   * @type Object\n   * @example\n   *\n   * // options can be changed before the script is included\n   * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n   */\n  var html5 = {\n    /**\n     * An array or space separated string of node names of the elements to shiv.\n     * @memberOf html5\n     * @type Array|String\n     */\n    elements:\n      options.elements ||\n      \"abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video\",\n\n    /**\n     * current version of html5shiv\n     */\n    version: version,\n\n    /**\n     * A flag to indicate that the HTML5 style sheet should be inserted.\n     * @memberOf html5\n     * @type Boolean\n     */\n    shivCSS: options.shivCSS !== false,\n\n    /**\n     * Is equal to true if a browser supports creating unknown/HTML5 elements\n     * @memberOf html5\n     * @type boolean\n     */\n    supportsUnknownElements: supportsUnknownElements,\n\n    /**\n     * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n     * methods should be overwritten.\n     * @memberOf html5\n     * @type Boolean\n     */\n    shivMethods: options.shivMethods !== false,\n\n    /**\n     * A string to describe the type of `html5` object (\"default\" or \"default print\").\n     * @memberOf html5\n     * @type String\n     */\n    type: \"default\",\n\n    // shivs the document according to the specified `html5` object options\n    shivDocument: shivDocument,\n\n    //creates a shived element\n    createElement: createElement,\n\n    //creates a shived documentFragment\n    createDocumentFragment: createDocumentFragment,\n\n    //extends list of elements\n    addElements: addElements\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose html5\n  window.html5 = html5;\n\n  // shiv the document\n  shivDocument(document);\n\n  if (typeof module == \"object\" && module.exports) {\n    module.exports = html5;\n  }\n})(typeof window !== \"undefined\" ? window : this, document);\n","const hello = (subject) => console.log(`Hello, ${subject}!`);\nalert(\"hello man\");\n\nconst hello2 = (subject) => console.log(`Hello, ${subject}!`);\nalert(\"hello\");\n"]}